===================================================================
***** Test case <test_dry_run> on cloud <GDrive:>
CLEAN UP any remnant test content and SET UP the INITIAL STATE on both Local and Remote
./testdir
***** BiDirectional Sync for Cloud Services using rclone *****
Synching Remote path  <GDrive:/testdir/>  with Local path  <./testdir/>
Command line:  <Namespace(Cloud='GDrive:/testdir', LocalPath='./testdir', check_access=False, dry_run=False, filters_file=None, first_sync=True, force=False, max_deletes=50, no_datetime_log=True, rc_verbose=None, verbose=False, workdir='./testwd/')>
>>>>> Generating --first-sync Local and Remote lists
>>>>> Generating Local and Remote lists
  LOCAL    Checking for Diffs                  - ./testdir/
  REMOTE   Checking for Diffs                  - GDrive:/testdir/
>>>>> No changes on Remote - Skipping ahead
>>>>> Synching Local to Remote
>>>>> rmdirs Remote
>>>>> rmdirs Local
>>>>> Refreshing Local and Remote lsl files
>>>>> Successful run.  All done.


DO RCLONESYNC --FIRST-SYNC to set LSL files baseline
RUN CHANGECMDS to appy changes from test case initial state
    :MSG:	New on Remote							file10
    ['rclone', 'copy', './tests/test_dry_run//modfiles/file10.txt', 'GDrive:/testdir']
    :MSG:	Newer on Remote							file1
    ['rclone', 'copy', './tests/test_dry_run//modfiles/file1.txt', 'GDrive:/testdir']
    :MSG:	New on Local							file11
    ['rclone', 'copy', './tests/test_dry_run//modfiles/file11.txt', './testdir']
    :MSG:	Newer on Local							file2
    ['rclone', 'copy', './tests/test_dry_run//modfiles/file2.txt', './testdir']
    :MSG:	Deleted on Remote						file3
    ['rclone', 'delete', 'GDrive:/testdir/file3.txt']
    :MSG:	Deleted on Local						file4
    ['rclone', 'delete', './testdir/file4.txt']
    :MSG:	Changed on Remote and on Local			file5 (file5R, file5L)
    ['rclone', 'copyto', './tests/test_dry_run//modfiles/file5R.txt', 'GDrive:/testdir/file5.txt']
    ['rclone', 'copyto', './tests/test_dry_run//modfiles/file5L.txt', './testdir/file5.txt']
    :MSG:	Newer on Remote and deleted on Local	file6
    ['rclone', 'copy', './tests/test_dry_run//modfiles/file6.txt', 'GDrive:/testdir']
    ['rclone', 'delete', './testdir/file6.txt']
    :MSG:	Newer on Local and deleted on Remote	file7
    ['rclone', 'copy', './tests/test_dry_run//modfiles/file7.txt', './testdir']
    ['rclone', 'delete', 'GDrive:/testdir/file7.txt']

RUN SYNCCMDS (console output captured to consolelog.txt)
    :MSG:	Sync with --dry-run
    ['../rclonesync.py', 'GDrive:/testdir', './testdir', '--verbose', '--workdir', './testwd/', '--no-datetime-log', '--dry-run']
    :MSG:	Sync without --dry-run
    ['../rclonesync.py', 'GDrive:/testdir', './testdir', '--verbose', '--workdir', './testwd/', '--no-datetime-log']

COMPARE RESULTS files to the testcase golden directory
----------------------------------------------------------
Number of results files (5) match

----------------------------------------------------------
Match:  <GDrive__testdir__llocalLSL>

----------------------------------------------------------
MISCOMPARE  < Golden  to  Results > for:  <consolelog.txt>
30c30
< 2018/07/01 00:34:45 NOTICE: file1.txt: Not copying as --dry-run
---
> 2018/07/01 13:31:42 NOTICE: file1.txt: Not copying as --dry-run
32c32
< 2018/07/01 00:34:47 NOTICE: file10.txt: Not copying as --dry-run
---
> 2018/07/01 13:31:44 NOTICE: file10.txt: Not copying as --dry-run
34c34
< 2018/07/01 00:34:47 NOTICE: file3.txt: Not deleting as --dry-run
---
> 2018/07/01 13:31:44 NOTICE: file3.txt: Not deleting as --dry-run
37c37
< 2018/07/01 00:34:48 NOTICE: file5.txt: Not copying as --dry-run
---
> 2018/07/01 13:31:45 NOTICE: file5.txt: Not copying as --dry-run
39c39
< 2018/07/01 00:34:48 NOTICE: file5.txt: Not moving as --dry-run
---
> 2018/07/01 13:31:45 NOTICE: file5.txt: Not moving as --dry-run
42c42
< 2018/07/01 00:34:49 NOTICE: file6.txt: Not copying as --dry-run
---
> 2018/07/01 13:31:48 NOTICE: file6.txt: Not copying as --dry-run
44,52c44,52
< 2018/07/01 00:34:50 NOTICE: file11.txt: Not copying as --dry-run
< 2018/07/01 00:34:50 NOTICE: file3.txt: Not copying as --dry-run
< 2018/07/01 00:34:50 NOTICE: file2.txt: Not copying as --dry-run
< 2018/07/01 00:34:50 NOTICE: file7.txt: Not copying as --dry-run
< 2018/07/01 00:34:50 NOTICE: file1.txt: Not copying as --dry-run
< 2018/07/01 00:34:50 NOTICE: file5.txt: Not updating modification time as --dry-run
< 2018/07/01 00:34:50 NOTICE: file10.txt: Not deleting as --dry-run
< 2018/07/01 00:34:50 NOTICE: file4.txt: Not deleting as --dry-run
< 2018/07/01 00:34:50 NOTICE: file6.txt: Not deleting as --dry-run
---
> 2018/07/01 13:31:48 NOTICE: file1.txt: Not copying as --dry-run
> 2018/07/01 13:31:48 NOTICE: file2.txt: Not copying as --dry-run
> 2018/07/01 13:31:48 NOTICE: file11.txt: Not copying as --dry-run
> 2018/07/01 13:31:48 NOTICE: file7.txt: Not copying as --dry-run
> 2018/07/01 13:31:48 NOTICE: file3.txt: Not copying as --dry-run
> 2018/07/01 13:31:48 NOTICE: file5.txt: Not updating modification time as --dry-run
> 2018/07/01 13:31:48 NOTICE: file4.txt: Not deleting as --dry-run
> 2018/07/01 13:31:48 NOTICE: file6.txt: Not deleting as --dry-run
> 2018/07/01 13:31:48 NOTICE: file10.txt: Not deleting as --dry-run

----------------------------------------------------------
Match:  <GDrive__testdir__remoteLSL>

----------------------------------------------------------
Match:  <GDrive__testdir__llocalLSL_DRYRUN>

----------------------------------------------------------
Match:  <GDrive__testdir__remoteLSL_DRYRUN>

----------------------------------------------------------
CLEANING UP Local and Remote testdirs
TEST <test_dry_run> FAILED WITH 1 ERRORS.


===================================================================
***** Test case <test_filtersfile_checks> on cloud <GDrive:>
CLEAN UP any remnant test content and SET UP the INITIAL STATE on both Local and Remote
./testdir
***** BiDirectional Sync for Cloud Services using rclone *****
Synching Remote path  <GDrive:/testdir/>  with Local path  <./testdir/>
Command line:  <Namespace(Cloud='GDrive:/testdir', LocalPath='./testdir', check_access=False, dry_run=False, filters_file=None, first_sync=True, force=False, max_deletes=50, no_datetime_log=True, rc_verbose=None, verbose=False, workdir='./testwd/')>
>>>>> Generating --first-sync Local and Remote lists
>>>>> Generating Local and Remote lists
  LOCAL    Checking for Diffs                  - ./testdir/
  REMOTE   Checking for Diffs                  - GDrive:/testdir/
>>>>> No changes on Remote - Skipping ahead
>>>>> Synching Local to Remote
>>>>> rmdirs Remote
>>>>> rmdirs Local
>>>>> Refreshing Local and Remote lsl files
>>>>> Successful run.  All done.


DO RCLONESYNC --FIRST-SYNC to set LSL files baseline
RUN CHANGECMDS to appy changes from test case initial state

RUN SYNCCMDS (console output captured to consolelog.txt)
    :MSG:   Place filtersfile in WORKDIR
    ['rclone', 'copy', './tests/test_filtersfile_checks/filtersfile.txt', './testwd/']
    :MSG:	Run with --filters-file but with no MD5	Should abort
    ['../rclonesync.py', 'GDrive:/testdir', './testdir', '--verbose', '--filters-file', './testwd//filtersfile.txt', '--workdir', './testwd/', '--no-datetime-log']
    :MSG:	Run without --filters-file 				Should be blocked due to prior CRITICAL abort
    ['../rclonesync.py', 'GDrive:/testdir', './testdir', '--verbose', '--workdir', './testwd/', '--no-datetime-log']
    :MSG:	Run with --filters-file and --first-sync
    ['../rclonesync.py', 'GDrive:/testdir', './testdir', '--verbose', '--filters-file', './testwd//filtersfile.txt', '--workdir', './testwd/', '--no-datetime-log', '--first-sync']
    :MSG:	Run with --filters-file alone.  		Should run
    ['../rclonesync.py', 'GDrive:/testdir', './testdir', '--verbose', '--filters-file', './testwd//filtersfile.txt', '--workdir', './testwd/', '--no-datetime-log']
    :MSG:	push changed filters-file to WORKDIR
    ['rclone', 'copyto', './tests/test_filtersfile_checks//filtersfile2.txt', './testwd//filtersfile.txt']
    :MSG:	Run with --filters-file alone.  		Should abort
    ['../rclonesync.py', 'GDrive:/testdir', './testdir', '--verbose', '--filters-file', './testwd//filtersfile.txt', '--workdir', './testwd/', '--no-datetime-log']

COMPARE RESULTS files to the testcase golden directory
----------------------------------------------------------
Number of results files (5) match

----------------------------------------------------------
Match:  <filtersfile.txt-MD5>

----------------------------------------------------------
Match:  <consolelog.txt>

----------------------------------------------------------
Match:  <GDrive__testdir__remoteLSL_ERROR>

----------------------------------------------------------
Match:  <GDrive__testdir__llocalLSL_ERROR>

----------------------------------------------------------
Match:  <filtersfile.txt>

----------------------------------------------------------
CLEANING UP Local and Remote testdirs
TEST <test_filtersfile_checks> PASSED


===================================================================
***** Test case <test_basic> on cloud <GDrive:>
CLEAN UP any remnant test content and SET UP the INITIAL STATE on both Local and Remote
./testdir
***** BiDirectional Sync for Cloud Services using rclone *****
Synching Remote path  <GDrive:/testdir/>  with Local path  <./testdir/>
Command line:  <Namespace(Cloud='GDrive:/testdir', LocalPath='./testdir', check_access=False, dry_run=False, filters_file=None, first_sync=True, force=False, max_deletes=50, no_datetime_log=True, rc_verbose=None, verbose=False, workdir='./testwd/')>
>>>>> Generating --first-sync Local and Remote lists
>>>>> Generating Local and Remote lists
  LOCAL    Checking for Diffs                  - ./testdir/
  REMOTE   Checking for Diffs                  - GDrive:/testdir/
>>>>> No changes on Remote - Skipping ahead
>>>>> Synching Local to Remote
>>>>> rmdirs Remote
>>>>> rmdirs Local
>>>>> Refreshing Local and Remote lsl files
>>>>> Successful run.  All done.


DO RCLONESYNC --FIRST-SYNC to set LSL files baseline
RUN CHANGECMDS to appy changes from test case initial state
    :MSG:	Place a newer files on the Remote
    ['rclone', 'copy', './tests/test_basic//modfiles/file1.txt', 'GDrive:/testdir']
    ['rclone', 'copyto', './tests/test_basic//modfiles/file1.txt', 'GDrive:/testdir/subdir/file20.txt']

RUN SYNCCMDS (console output captured to consolelog.txt)
    :MSG:	Issue rclonesync clould to local
    ['../rclonesync.py', 'GDrive:/testdir', './testdir', '--verbose', '--workdir', './testwd/', '--no-datetime-log']

COMPARE RESULTS files to the testcase golden directory
----------------------------------------------------------
Number of results files (3) match

----------------------------------------------------------
Match:  <GDrive__testdir__llocalLSL>

----------------------------------------------------------
Match:  <consolelog.txt>

----------------------------------------------------------
Match:  <GDrive__testdir__remoteLSL>

----------------------------------------------------------
CLEANING UP Local and Remote testdirs
TEST <test_basic> PASSED


===================================================================
***** Test case <test_max_deletes_local> on cloud <GDrive:>
CLEAN UP any remnant test content and SET UP the INITIAL STATE on both Local and Remote
./testdir
***** BiDirectional Sync for Cloud Services using rclone *****
Synching Remote path  <GDrive:/testdir/>  with Local path  <./testdir/>
Command line:  <Namespace(Cloud='GDrive:/testdir', LocalPath='./testdir', check_access=False, dry_run=False, filters_file=None, first_sync=True, force=False, max_deletes=50, no_datetime_log=True, rc_verbose=None, verbose=False, workdir='./testwd/')>
>>>>> Generating --first-sync Local and Remote lists
>>>>> Generating Local and Remote lists
  LOCAL    Checking for Diffs                  - ./testdir/
  REMOTE   Checking for Diffs                  - GDrive:/testdir/
>>>>> No changes on Remote - Skipping ahead
>>>>> Synching Local to Remote
>>>>> rmdirs Remote
>>>>> rmdirs Local
>>>>> Refreshing Local and Remote lsl files
>>>>> Successful run.  All done.


DO RCLONESYNC --FIRST-SYNC to set LSL files baseline
RUN CHANGECMDS to appy changes from test case initial state
    :MSG:	Delete >50% of local files
    ['rclone', 'delete', './testdir/file1.txt']
    ['rclone', 'delete', './testdir/file2.txt']
    ['rclone', 'delete', './testdir/file3.txt']
    ['rclone', 'delete', './testdir/file4.txt']
    ['rclone', 'delete', './testdir/file5.txt']

RUN SYNCCMDS (console output captured to consolelog.txt)
    :MSG:	Sync should fail due to too many local deletes
    ['../rclonesync.py', 'GDrive:/testdir', './testdir', '--verbose', '--workdir', './testwd/', '--no-datetime-log']
    :MSG:   Change --max-delta limit to 60%, and sync should run.
    ['../rclonesync.py', 'GDrive:/testdir', './testdir', '--verbose', '--workdir', './testwd/', '--no-datetime-log', '--max-deletes', '60']

COMPARE RESULTS files to the testcase golden directory
----------------------------------------------------------
Number of results files (3) match

----------------------------------------------------------
Match:  <GDrive__testdir__llocalLSL>

----------------------------------------------------------
Match:  <consolelog.txt>

----------------------------------------------------------
Match:  <GDrive__testdir__remoteLSL>

----------------------------------------------------------
CLEANING UP Local and Remote testdirs
TEST <test_max_deletes_local> PASSED


===================================================================
***** Test case <test_check_access> on cloud <GDrive:>
CLEAN UP any remnant test content and SET UP the INITIAL STATE on both Local and Remote
./testdir
***** BiDirectional Sync for Cloud Services using rclone *****
Synching Remote path  <GDrive:/testdir/>  with Local path  <./testdir/>
Command line:  <Namespace(Cloud='GDrive:/testdir', LocalPath='./testdir', check_access=False, dry_run=False, filters_file=None, first_sync=True, force=False, max_deletes=50, no_datetime_log=True, rc_verbose=None, verbose=False, workdir='./testwd/')>
>>>>> Generating --first-sync Local and Remote lists
>>>>> Generating Local and Remote lists
  LOCAL    Checking for Diffs                  - ./testdir/
  REMOTE   Checking for Diffs                  - GDrive:/testdir/
>>>>> No changes on Remote - Skipping ahead
>>>>> Synching Local to Remote
>>>>> rmdirs Remote
>>>>> rmdirs Local
>>>>> Refreshing Local and Remote lsl files
>>>>> Successful run.  All done.


DO RCLONESYNC --FIRST-SYNC to set LSL files baseline
RUN CHANGECMDS to appy changes from test case initial state

RUN SYNCCMDS (console output captured to consolelog.txt)
    :MSG:	1) First, see that --check-access passes with the initial setup
    ['../rclonesync.py', 'GDrive:/testdir', './testdir', '--verbose', '--check-access', '--workdir', './testwd/', '--no-datetime-log']
    :MSG:	2) Delete the remote subdir RCLONE_TEST, run sync, will fail critical
    ['rclone', 'delete', 'GDrive:/testdir/subdir/RCLONE_TEST']
    ['../rclonesync.py', 'GDrive:/testdir', './testdir', '--verbose', '--check-access', '--workdir', './testwd/', '--no-datetime-log']
    :MSG:	3) Put the remote subdir RCLONE_TEST back, run --first-sync
    ['rclone', 'copy', './testdir/subdir/RCLONE_TEST', 'GDrive:/testdir']
    ['../rclonesync.py', 'GDrive:/testdir', './testdir', '--verbose', '--check-access', '--first-sync', '--workdir', './testwd/', '--no-datetime-log']
    :MSG:	4) Run sync with --check-access.  Should pass.
    ['../rclonesync.py', 'GDrive:/testdir', './testdir', '--verbose', '--check-access', '--workdir', './testwd/', '--no-datetime-log']
    :MSG:	5) Delete local top level RCLONE_TEST, run sync, will fail critical
    ['rclone', 'delete', './testdir/RCLONE_TEST']
    ['../rclonesync.py', 'GDrive:/testdir', './testdir', '--verbose', '--check-access', '--workdir', './testwd/', '--no-datetime-log']
    :MSG:	6) Run --first-sync, which will copy the remote top level back to local
    ['../rclonesync.py', 'GDrive:/testdir', './testdir', '--verbose', '--check-access', '--first-sync', '--workdir', './testwd/', '--no-datetime-log']
    :MSG:	7) Run sync with --check-access.  Should pass.
    ['../rclonesync.py', 'GDrive:/testdir', './testdir', '--verbose', '--check-access', '--workdir', './testwd/', '--no-datetime-log']

COMPARE RESULTS files to the testcase golden directory
----------------------------------------------------------
Number of results files (5) match

----------------------------------------------------------
Match:  <GDrive__testdir__llocalLSL>

----------------------------------------------------------
Match:  <consolelog.txt>

----------------------------------------------------------
Match:  <GDrive__testdir__remoteLSL_ERROR>

----------------------------------------------------------
Match:  <GDrive__testdir__remoteLSL>

----------------------------------------------------------
Match:  <GDrive__testdir__llocalLSL_ERROR>

----------------------------------------------------------
CLEANING UP Local and Remote testdirs
TEST <test_check_access> PASSED


===================================================================
***** Test case <test_max_deletes_remote_force> on cloud <GDrive:>
CLEAN UP any remnant test content and SET UP the INITIAL STATE on both Local and Remote
./testdir
***** BiDirectional Sync for Cloud Services using rclone *****
Synching Remote path  <GDrive:/testdir/>  with Local path  <./testdir/>
Command line:  <Namespace(Cloud='GDrive:/testdir', LocalPath='./testdir', check_access=False, dry_run=False, filters_file=None, first_sync=True, force=False, max_deletes=50, no_datetime_log=True, rc_verbose=None, verbose=False, workdir='./testwd/')>
>>>>> Generating --first-sync Local and Remote lists
>>>>> Generating Local and Remote lists
  LOCAL    Checking for Diffs                  - ./testdir/
  REMOTE   Checking for Diffs                  - GDrive:/testdir/
>>>>> No changes on Remote - Skipping ahead
>>>>> Synching Local to Remote
>>>>> rmdirs Remote
>>>>> rmdirs Local
>>>>> Refreshing Local and Remote lsl files
>>>>> Successful run.  All done.


DO RCLONESYNC --FIRST-SYNC to set LSL files baseline
RUN CHANGECMDS to appy changes from test case initial state
    :MSG:	Delete >50% of Remote files
    ['rclone', 'delete', 'GDrive:/testdir/file1.txt']
    ['rclone', 'delete', 'GDrive:/testdir/file2.txt']
    ['rclone', 'delete', 'GDrive:/testdir/file3.txt']
    ['rclone', 'delete', 'GDrive:/testdir/file4.txt']
    ['rclone', 'delete', 'GDrive:/testdir/file5.txt']

RUN SYNCCMDS (console output captured to consolelog.txt)
    :MSG:	Sync should fail due to too many Remote deletes
    ['../rclonesync.py', 'GDrive:/testdir', './testdir', '--verbose', '--workdir', './testwd/', '--no-datetime-log']
    :MSG:   Apply --force switch, and sync should run.
    ['../rclonesync.py', 'GDrive:/testdir', './testdir', '--verbose', '--workdir', './testwd/', '--no-datetime-log', '--force']

COMPARE RESULTS files to the testcase golden directory
----------------------------------------------------------
Number of results files (3) match

----------------------------------------------------------
Match:  <GDrive__testdir__llocalLSL>

----------------------------------------------------------
Match:  <consolelog.txt>

----------------------------------------------------------
Match:  <GDrive__testdir__remoteLSL>

----------------------------------------------------------
CLEANING UP Local and Remote testdirs
TEST <test_max_deletes_remote_force> PASSED


===================================================================
***** Test case <test_changes> on cloud <GDrive:>
CLEAN UP any remnant test content and SET UP the INITIAL STATE on both Local and Remote
./testdir
***** BiDirectional Sync for Cloud Services using rclone *****
Synching Remote path  <GDrive:/testdir/>  with Local path  <./testdir/>
Command line:  <Namespace(Cloud='GDrive:/testdir', LocalPath='./testdir', check_access=False, dry_run=False, filters_file=None, first_sync=True, force=False, max_deletes=50, no_datetime_log=True, rc_verbose=None, verbose=False, workdir='./testwd/')>
>>>>> Generating --first-sync Local and Remote lists
>>>>> Generating Local and Remote lists
  LOCAL    Checking for Diffs                  - ./testdir/
  REMOTE   Checking for Diffs                  - GDrive:/testdir/
>>>>> No changes on Remote - Skipping ahead
>>>>> Synching Local to Remote
>>>>> rmdirs Remote
>>>>> rmdirs Local
>>>>> Refreshing Local and Remote lsl files
>>>>> Successful run.  All done.


DO RCLONESYNC --FIRST-SYNC to set LSL files baseline
RUN CHANGECMDS to appy changes from test case initial state
    :MSG:	New on Remote							file10
    ['rclone', 'copy', './tests/test_changes//modfiles/file10.txt', 'GDrive:/testdir']
    :MSG:	Newer on Remote							file1
    ['rclone', 'copy', './tests/test_changes//modfiles/file1.txt', 'GDrive:/testdir']
    :MSG:	New on Local							file11
    ['rclone', 'copy', './tests/test_changes//modfiles/file11.txt', './testdir']
    :MSG:	Newer on Local							file2
    ['rclone', 'copy', './tests/test_changes//modfiles/file2.txt', './testdir']
    :MSG:	Deleted on Remote						file3
    ['rclone', 'delete', 'GDrive:/testdir/file3.txt']
    :MSG:	Deleted on Local						file4
    ['rclone', 'delete', './testdir/file4.txt']
    :MSG:	Changed on Remote and on Local			file5 (file5R, file5L)
    ['rclone', 'copyto', './tests/test_changes//modfiles/file5R.txt', 'GDrive:/testdir/file5.txt']
    ['rclone', 'copyto', './tests/test_changes//modfiles/file5L.txt', './testdir/file5.txt']
    :MSG:	Newer on Remote and deleted on Local	file6
    ['rclone', 'copy', './tests/test_changes//modfiles/file6.txt', 'GDrive:/testdir']
    ['rclone', 'delete', './testdir/file6.txt']
    :MSG:	Newer on Local and deleted on Remote	file7
    ['rclone', 'copy', './tests/test_changes//modfiles/file7.txt', './testdir']
    ['rclone', 'delete', 'GDrive:/testdir/file7.txt']

RUN SYNCCMDS (console output captured to consolelog.txt)
    :MSG:	Issue rclonesync clould to local
    ['../rclonesync.py', 'GDrive:/testdir', './testdir', '--verbose', '--workdir', './testwd/', '--no-datetime-log']

COMPARE RESULTS files to the testcase golden directory
----------------------------------------------------------
Number of results files (3) match

----------------------------------------------------------
Match:  <GDrive__testdir__llocalLSL>

----------------------------------------------------------
Match:  <consolelog.txt>

----------------------------------------------------------
Match:  <GDrive__testdir__remoteLSL>

----------------------------------------------------------
CLEANING UP Local and Remote testdirs
TEST <test_changes> PASSED


===================================================================
***** Test case <test_filters> on cloud <GDrive:>
CLEAN UP any remnant test content and SET UP the INITIAL STATE on both Local and Remote
./testdir
***** BiDirectional Sync for Cloud Services using rclone *****
Synching Remote path  <GDrive:/testdir/>  with Local path  <./testdir/>
Command line:  <Namespace(Cloud='GDrive:/testdir', LocalPath='./testdir', check_access=False, dry_run=False, filters_file=None, first_sync=True, force=False, max_deletes=50, no_datetime_log=True, rc_verbose=None, verbose=False, workdir='./testwd/')>
>>>>> Generating --first-sync Local and Remote lists
>>>>> Generating Local and Remote lists
  LOCAL    Checking for Diffs                  - ./testdir/
  REMOTE   Checking for Diffs                  - GDrive:/testdir/
>>>>> No changes on Remote - Skipping ahead
>>>>> Synching Local to Remote
>>>>> rmdirs Remote
>>>>> rmdirs Local
>>>>> Refreshing Local and Remote lsl files
>>>>> Successful run.  All done.


DO RCLONESYNC --FIRST-SYNC to set LSL files baseline
RUN CHANGECMDS to appy changes from test case initial state
    :MSG:	Place a new files on the Remote
    ['rclone', 'copyto', './tests/test_filters//modfiles/fileZ.txt', 'GDrive:/testdir/fileZ.txt']
    ['rclone', 'copyto', './tests/test_filters//modfiles/fileZ.txt', './testdir/subdir/fileZ.txt']

RUN SYNCCMDS (console output captured to consolelog.txt)
    :MSG:	Issue rclonesync with --filters-file.  Cloud-side fileZ.txt is filtered.
    ['../rclonesync.py', 'GDrive:/testdir', './testdir', '--verbose', '--filters-file', './tests/test_filters//filtersfile.txt', '--workdir', './testwd/', '--no-datetime-log']

COMPARE RESULTS files to the testcase golden directory
----------------------------------------------------------
Number of results files (3) match

----------------------------------------------------------
Match:  <GDrive__testdir__llocalLSL>

----------------------------------------------------------
Match:  <consolelog.txt>

----------------------------------------------------------
Match:  <GDrive__testdir__remoteLSL>

----------------------------------------------------------
CLEANING UP Local and Remote testdirs
TEST <test_filters> PASSED


